================================================
Functional Simulator for simpleRISC processor
================================================

README

Table of contents
1. Directory Structure
2. How to build
3. How to execute
<<<<<<< HEAD
4. Test Results

Directory Structure:
--------------------
CS112-Project
  |
  |- bin
      |
      |- mySimpleSim
  |- doc
      |
      |- design-doc.docx
  |- include
      |
      |- mySimpleSim.h
  |- src
      |- main.c
      |- Makefile
      |- mySimpleSim.c
  |- test
      |- simple_add.mem
      |- prime.mem
      |- matrix.mem
      |- lcm.mem
      |- gcd.mem
      |- fibonacci_recursive.mem
      |- factorial_recursive.mem
      |- factorial_iterative.mem
      |- assignment4.mem
      |- array_add.mem 

How to build
------------
For building:
	$cd src
	$make

For cleaning the project:
	$cd src
	$make clean

How to execute
--------------
./mySimpleSim test/simple_add.mem

Test Results
--------------
1. simple_add.mem
	Calculates 4(r1)+12(r2)=16(r3).
2. prime.mem
	Calculats whether 1729 (r1) is prime or not 1 
	(r0=isPrime)
3. matrix.mem
	See corresponding '.asm' file for this testcase 
	involving 
	matrix operations with ld/st.
4. lcm.mem
	Finds lcm of r1(1963) and r2(1729) into r0(261079).
5. fibonacci_recursive.mem
	Calculates n(th) [=15] fibonaaci number, i.e. 377 into 
	r2
	f0=1, f1=1
6. factorial_recursive.mem
	Calculates factorial of 12(r0), i.e. 479001600 into r1
7. assignment4.mem
	See 'ass4.asm' and 'ass4.c' for this testcase invloving 
	chained (3 total) functions and switch case.
	Stores result 29416(d) into r6.
8. array_add.mem
	Creates an array of size 10 and initializes A[i]=i and
	sums them to get 5050 into r2.
